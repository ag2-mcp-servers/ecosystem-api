# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T14:43:33+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, ConfigDict, Field, RootModel


class CTASettings(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    background_color: Optional[str] = None
    button_background_color: Optional[str] = None
    button_color: Optional[str] = None
    button_label: Optional[str] = None
    button_link: Optional[str] = None
    color: Optional[str] = None
    description: Optional[str] = None
    enabled: Optional[bool] = None
    title: Optional[str] = None


class CardSettings(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    background_color: Optional[str] = None
    border_color: Optional[str] = None
    border_radius: Optional[str] = None
    border_size: Optional[str] = None
    color: Optional[str] = None
    columns: Optional[int] = None
    description_lines: Optional[int] = None
    icon_border_radius: Optional[str] = None
    icon_shadow_enabled: Optional[bool] = None
    icon_size: Optional[int] = None
    shadow_enabled: Optional[bool] = None
    show_action: Optional[bool] = None
    show_badges: Optional[bool] = None
    show_category: Optional[bool] = None
    show_description: Optional[bool] = None
    style: Optional[str] = None


class Contact(BaseModel):
    email: Optional[str] = None
    first_name: Optional[str] = None
    id: Optional[str] = Field(None, examples=['12345'])
    last_name: Optional[str] = None
    linked_in: Optional[str] = None
    name: str
    role: Optional[str] = None
    twitter: Optional[str] = None


class CustomSettings(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    css: Optional[str] = None
    css_link: Optional[str] = None
    domain: Optional[str] = None
    html_footer: Optional[str] = None
    html_nav: Optional[str] = None
    java_script_link: Optional[str] = None


class MenuPosition(Enum):
    TOP = 'TOP'
    LEFT = 'LEFT'
    RIGHT = 'RIGHT'
    HIDDEN = 'HIDDEN'


class MenuStyle(Enum):
    LIST = 'LIST'
    PILL = 'PILL'
    FILTER = 'FILTER'


class NavigationMobileMenuType(Enum):
    ICON = 'ICON'
    TEXT = 'TEXT'


class Type(Enum):
    LOGO = 'LOGO'
    BANNER = 'BANNER'
    SCREENSHOT = 'SCREENSHOT'


class File(BaseModel):
    content_type: Optional[str] = Field(None, examples=['application/jpeg'])
    created_at: Optional[datetime] = None
    id: Optional[str] = Field(None, examples=['12345'])
    type: Optional[Type] = None
    updated_at: Optional[datetime] = None
    url: str


class IntegrationSettings(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    albacross_id: Optional[str] = None
    automate_enabled: Optional[bool] = None
    blendr_enabled: Optional[bool] = None
    combidesk_enabled: Optional[bool] = None
    crisp_id: Optional[str] = None
    drift_id: Optional[str] = None
    google_analytics_id: Optional[str] = None
    google_tag_manager_id: Optional[str] = None
    heap_id: Optional[str] = None
    hubspot_portal_id: Optional[str] = None
    integromat_enabled: Optional[bool] = None
    intercom_app_id: Optional[str] = None
    iubenda_cookie_policy_id: Optional[str] = None
    iubenda_site_id: Optional[str] = None
    journy_io_domain: Optional[str] = None
    journy_io_id: Optional[str] = None
    livechat_id: Optional[str] = None
    metomic_id: Optional[str] = None
    microsoft_flow_enabled: Optional[bool] = None
    microsoft_flow_id: Optional[str] = None
    onetrust_id: Optional[str] = None
    piesync_enabled: Optional[bool] = None
    segment_enabled: Optional[bool] = None
    segment_id: Optional[str] = None
    tray_io_enabled: Optional[bool] = None
    zapier_beta_link: Optional[str] = None
    zapier_enabled: Optional[bool] = None
    zapier_id: Optional[str] = None


class LeadFormSettings(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    capture_form_enabled: Optional[bool] = None
    first_name_field_enabled: Optional[bool] = None
    first_name_field_required: Optional[bool] = None
    integration_enabled: Optional[bool] = None
    last_name_field_enabled: Optional[bool] = None
    last_name_field_required: Optional[bool] = None
    telephone_field_enabled: Optional[bool] = None
    telephone_field_required: Optional[bool] = None
    work_email_validation: Optional[bool] = None


class Links(BaseModel):
    current: str = Field(
        ...,
        description='Link to navigate to the current page through the API',
        examples=['https://api.apideck.com/ecosystem/123abc/listings'],
    )
    next: Optional[str] = Field(
        None,
        description='Link to navigate to the previous page through the API',
        examples=[
            'https://api.apideck.com/ecosystem/123abc/listings?cursor=em9oby1jcm06OnBhZ2U6OjM'
        ],
    )
    previous: Optional[str] = Field(
        None,
        description='Link to navigate to the previous page through the API',
        examples=[
            'https://api.apideck.com/ecosystem/123abc/listings?cursor=em9oby1jcm06OnBhZ2U6OjE%3D'
        ],
    )


class Naming(Enum):
    LISTING = 'LISTING'
    LISTINGS = 'LISTINGS'
    INTEGRATIONS = 'INTEGRATIONS'
    APPS = 'APPS'
    CONNECTORS = 'CONNECTORS'
    DATASOURCES = 'DATASOURCES'
    ADDONS = 'ADDONS'
    PLUGINS = 'PLUGINS'
    PARTNERS = 'PARTNERS'
    CHANNELS = 'CHANNELS'
    CONNECTIONS = 'CONNECTIONS'
    EXTENSIONS = 'EXTENSIONS'


class SidebarPosition(Enum):
    TOP = 'TOP'
    LEFT = 'LEFT'
    RIGHT = 'RIGHT'
    HIDDEN = 'HIDDEN'


class ListingSettings(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    description_text_template: Optional[str] = None
    description_title: Optional[str] = None
    features_text_template: Optional[str] = None
    features_title: Optional[str] = None
    install_button_label: Optional[str] = None
    name_postfix: Optional[str] = None
    naming: Optional[Naming] = None
    native_integration_link: Optional[str] = None
    pricing_disabled: Optional[bool] = None
    pricing_text_template: Optional[str] = None
    pricing_title: Optional[str] = None
    sidebar_position: Optional[SidebarPosition] = None


class Logo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    content_type: Optional[str] = None
    id: Optional[str] = None
    type: Optional[Type] = None
    url: str


class MastheadSettings(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    background: Optional[str] = None
    background_color: Optional[str] = None
    color: Optional[str] = None
    columns: Optional[int] = None
    description: Optional[str] = None
    title: Optional[str] = None


class Type2(Enum):
    SCREENSHOT = 'SCREENSHOT'
    VIDEO = 'VIDEO'


class Cursors(BaseModel):
    current: Optional[str] = Field(
        None,
        description='Cursor to navigate to the current page of results through the API',
        examples=['em9oby1jcm06OnBhZ2U6OjI='],
    )
    next: Optional[str] = Field(
        None,
        description='Cursor to navigate to the next page of results through the API',
        examples=['em9oby1jcm06OnBhZ2U6OjM='],
    )
    previous: Optional[str] = Field(
        None,
        description='Cursor to navigate to the previous page of results through the API',
        examples=['em9oby1jcm06OnBhZ2U6OjE='],
    )


class Meta(BaseModel):
    cursors: Optional[Cursors] = Field(
        None,
        description='Cursors to navigate to previous or next pages through the API',
    )
    items_on_page: Optional[int] = Field(
        None,
        description='Number of items returned in the data property of the response',
        examples=[50],
    )


class MetaTagSettings(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    description: Optional[str] = None
    description_category_page: Optional[str] = None
    description_collection_page: Optional[str] = None
    description_listing_page: Optional[str] = None
    keywords: Optional[str] = None
    title: Optional[str] = None
    title_postfix: Optional[str] = None


class Partner(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    company: str
    contacts: Optional[List[Contact]] = None
    created_at: Optional[datetime] = None
    icon: Optional[File] = None
    id: Optional[str] = Field(None, examples=['12345'])
    listed: Optional[str] = None
    twitter: Optional[str] = None
    updated_at: Optional[datetime] = None
    website: Optional[str] = None


class Translation(BaseModel):
    key: str
    locale: str
    value: Optional[str] = None


class Translations(RootModel[Optional[List[Translation]]]):
    root: Optional[List[Translation]] = None


class Category(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    count: Optional[int] = Field(None, examples=[1])
    created_at: Optional[datetime] = None
    description: Optional[str] = None
    id: Optional[str] = None
    listing_description_text_template: Optional[str] = None
    listing_features_text_template: Optional[str] = None
    listing_pricing_text_template: Optional[str] = None
    logo: Optional[Logo] = None
    name: str
    slug: str
    translations: Optional[Translations] = None
    updated_at: Optional[datetime] = None


class Collection(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    card_background_color: Optional[str] = None
    card_background_image: Optional[File] = None
    card_columns: Optional[int] = None
    card_style: Optional[str] = None
    count: Optional[int] = Field(None, examples=[1])
    description: Optional[str] = None
    hidden_from_homepage: Optional[bool] = None
    id: Optional[str] = None
    logo: Optional[File] = None
    name: str
    sequence: Optional[int] = None
    show_max_items_homepage: Optional[int] = None
    slug: str
    translations: Optional[Translations] = None
    visible: bool


class Ecosystem(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    about: Optional[str] = None
    alternatives_background_color: Optional[str] = None
    alternatives_color: Optional[str] = None
    attribution: Optional[bool] = None
    body_background_color: Optional[str] = None
    body_button_background_color: Optional[str] = None
    body_button_color: Optional[str] = None
    body_color: Optional[str] = None
    body_link_color: Optional[str] = None
    card_settings: Optional[CardSettings] = None
    categories_count_badge: Optional[bool] = None
    categories_show_max_items: Optional[int] = None
    collections_count_badge: Optional[bool] = None
    collections_title: Optional[str] = None
    create_link: Optional[str] = None
    created_at: Optional[datetime] = None
    cta_settings: Optional[CTASettings] = None
    custom_domain: Optional[str] = None
    custom_settings: Optional[CustomSettings] = None
    detail_pages_enabled: Optional[bool] = None
    footer_background_color: Optional[str] = None
    footer_color: Optional[str] = None
    google_site_verification_id: Optional[str] = None
    hide_install_buttons: Optional[bool] = None
    home_page_collection_category_cards: Optional[bool] = None
    home_page_show_all_listings: Optional[bool] = None
    id: Optional[str] = Field(None, examples=['12345'])
    installation_request_flow_enabled: Optional[bool] = None
    integration_settings: Optional[IntegrationSettings] = None
    is_published: bool
    lead_form_settings: Optional[LeadFormSettings] = None
    listing_settings: Optional[ListingSettings] = None
    masthead_settings: Optional[MastheadSettings] = None
    menu_position: Optional[MenuPosition] = None
    menu_style: Optional[MenuStyle] = None
    meta_tag_settings: Optional[MetaTagSettings] = None
    name: str
    navigation_background_color: Optional[str] = None
    navigation_color: Optional[str] = None
    navigation_logo_post_fix: Optional[str] = None
    navigation_mobile_menu_type: Optional[NavigationMobileMenuType] = None
    navigation_sticky: Optional[bool] = None
    primary_color: Optional[str] = None
    privacy_link: Optional[str] = None
    request_link: Optional[str] = None
    shadow_page_description: Optional[str] = None
    shadow_pages_enabled: Optional[bool] = None
    show_attribution_badge: Optional[bool] = None
    show_requested_listings: Optional[bool] = None
    slug: str
    terms_link: Optional[str] = None
    total_published_listings: Optional[int] = None
    unify_application_id: Optional[str] = None
    updated_at: Optional[datetime] = None
    utm_campaign: Optional[str] = None
    website: Optional[str] = None
    zaps_menu_title: Optional[str] = None
    zaps_page_enabled: Optional[bool] = None


class GetCategoriesResponse(BaseModel):
    data: List[Category]
    links: Optional[Links] = None
    meta: Optional[Meta] = None
    status: str = Field(..., description='HTTP Response Status', examples=['OK'])
    status_code: int = Field(
        ..., description='HTTP Response Status Code', examples=[200]
    )


class GetCategoryResponse(BaseModel):
    data: Category
    status: str = Field(..., description='HTTP Response Status', examples=['OK'])
    status_code: int = Field(
        ..., description='HTTP Response Status Code', examples=[200]
    )


class GetCollectionResponse(BaseModel):
    data: Collection
    status: str = Field(..., description='HTTP Response Status', examples=['OK'])
    status_code: int = Field(
        ..., description='HTTP Response Status Code', examples=[200]
    )


class GetCollectionsResponse(BaseModel):
    data: List[Collection]
    status: str = Field(..., description='HTTP Response Status', examples=['OK'])
    status_code: int = Field(
        ..., description='HTTP Response Status Code', examples=[200]
    )


class GetEcosystemResponse(BaseModel):
    data: Ecosystem
    status: str = Field(..., description='HTTP Response Status', examples=['OK'])
    status_code: int = Field(
        ..., description='HTTP Response Status Code', examples=[200]
    )


class Media(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    caption: Optional[str] = Field(None, examples=['Media'])
    id: Optional[str] = Field(None, examples=['12345'])
    sequence: Optional[int] = Field(None, examples=[1])
    translations: Optional[Translations] = None
    type: Optional[Type2] = None
    url: str


class Product(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    count: Optional[int] = Field(None, examples=[1])
    description: Optional[str] = None
    id: Optional[str] = Field(None, examples=['12345'])
    logo: Optional[File] = None
    name: str
    sequence: Optional[int] = Field(None, examples=[1])
    slug: str
    translations: Optional[Translations] = None
    visible: bool


class Screenshot(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    caption: Optional[str] = Field(None, examples=['Screenshot'])
    file: Optional[File] = None
    id: Optional[str] = Field(None, examples=['12345'])
    translations: Optional[Translations] = None


class GetProductResponse(BaseModel):
    data: Product
    status: str = Field(..., description='HTTP Response Status', examples=['OK'])
    status_code: int = Field(
        ..., description='HTTP Response Status Code', examples=[200]
    )


class GetProductsResponse(BaseModel):
    data: List[Product]
    links: Optional[Links] = None
    meta: Optional[Meta] = None
    status: str = Field(..., description='HTTP Response Status', examples=['OK'])
    status_code: int = Field(
        ..., description='HTTP Response Status Code', examples=[200]
    )


class Listing(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    automate_id: Optional[str] = None
    blendr_id: Optional[str] = None
    card_background_color: Optional[str] = None
    card_background_image: Optional[File] = None
    categories: Optional[List[Category]] = None
    cloud_service_id: Optional[str] = None
    collections: Optional[List[Collection]] = None
    combidesk_id: Optional[str] = None
    created_at: Optional[datetime] = None
    description: Optional[str] = None
    detail_page_disabled: Optional[bool] = None
    external_id: Optional[str] = Field(None, examples=['12345'])
    features: Optional[str] = None
    id: Optional[str] = Field(None, examples=['12345'])
    integromat_id: Optional[str] = None
    logo: Optional[Logo] = None
    media: Optional[List[Media]] = None
    meta_tag_description: Optional[str] = None
    meta_tag_keywords: Optional[str] = None
    meta_tag_title: Optional[str] = None
    microsoft_flow_id: Optional[str] = None
    name: str
    native_integration: Optional[bool] = None
    native_integration_link: Optional[str] = None
    partner: Optional[Partner] = None
    piesync_id: Optional[str] = None
    pricing: Optional[str] = None
    products: Optional[List[Product]] = None
    published: Optional[bool] = None
    published_at: Optional[datetime] = None
    screenshots: Optional[List[Screenshot]] = None
    segment_id: Optional[str] = None
    slug: str
    sticky: Optional[bool] = None
    tag_line: Optional[str] = None
    third_party_integration: Optional[bool] = None
    third_party_integration_link: Optional[str] = None
    translations: Optional[Translations] = None
    tray_io_id: Optional[str] = None
    unify_connector_id: Optional[str] = None
    upcoming: Optional[bool] = None
    updated_at: Optional[datetime] = None
    zapier_id: Optional[str] = None


class GetListingResponse(BaseModel):
    data: Listing
    status: str = Field(..., description='HTTP Response Status', examples=['OK'])
    status_code: int = Field(
        ..., description='HTTP Response Status Code', examples=[200]
    )


class GetListingsResponse(BaseModel):
    data: List[Listing]
    links: Optional[Links] = None
    meta: Optional[Meta] = None
    status: str = Field(..., description='HTTP Response Status', examples=['OK'])
    status_code: int = Field(
        ..., description='HTTP Response Status Code', examples=[200]
    )
